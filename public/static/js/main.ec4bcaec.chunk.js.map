{"version":3,"sources":["services/auth.service.js","components/Login.js","components/Signup.js","components/Profile.js","App.js","index.js"],"names":["AuthService","loggeduser","app","get","login","username","password","post","signup","this","axios","create","baseURL","withCredentials","Login","props","useState","email","setEmail","pwd","setPwd","authService","Container","Row","Col","md","span","offset","className","Form","onSubmit","e","preventDefault","then","loggedUser","console","log","catch","err","Group","controlId","Label","Control","type","value","onChange","target","name","Button","style","marginTop","width","bsPrefix","variant","onClick","align","to","Signup","Profile","user","setUser","useEffect","method","url","response","data","App","href","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ec4bcaec.chunk.js","sourcesContent":["import axios from 'axios'\n\nclass AuthService {\n\n    constructor() {\n        this.app = axios.create({\n            baseURL: 'https://prueba-deploy-back.herokuapp.com/sv/',\n            withCredentials: true\n        })\n        this.axios = axios\n    }\n\n    // recoverPassword = (email) => this.app.post(`/pass/recover/${email}`)\n\n    // updatePassword = (token, password) => this.app.post(`/pass/update`, { token, password })\n    loggeduser = () => this.app.get('/auth/logged-user')\n\n    login = (username, password) => this.app.post('/auth/login', { username, password })\n\n    signup = (username, password) => this.app.post('/auth/signup', { username, password })\n\n    // logout = () => this.app.get('/logout')\n\n\n}\n\nexport default AuthService","// import { Component } from 'react'\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../services/auth.service';\n// import { useEffect } from 'react'\nimport { useState } from 'react';\n\n\nexport default function Login(props) {\n\n    const [email, setEmail] = useState('');\n    const [pwd, setPwd] = useState('');\n\n    const authService = new AuthService();\n\n    const handleFormSubmit = e => {\n        e.preventDefault();\n\n\n        authService\n            .login(email, pwd)\n            .then(loggedUser => {\n\n                console.log(loggedUser)\n                // storeUser(loggedUser.data);\n                // showAlert(\n                //     `Welcome ${loggedUser.data.name\n                //     }! loading... ${loggedUser.data.role.toUpperCase()} config`\n                // );\n                // setLoginModal(false);\n                // history.push('/');\n            })\n            .catch(err => {\n                // showAlert('Something went wrong! Retry to logg in')\n                // setwrongUser(true);\n                console.log(err);\n            });\n    };\n\n    return (\n        <Container>\n            <h1>LOGIN</h1>\n            <Row>\n                <Col md={{ span: 10, offset: 1 }} className={'pb-4'}>\n                    <Form onSubmit={handleFormSubmit}>\n                        <Form.Group controlId=\"email\">\n                            <Form.Label>E-mail</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                value={email}\n                                onChange={e => setEmail(e.target.value)}\n                                name=\"email\"\n                            />\n\n                        </Form.Group>\n\n                        <Form.Group controlId=\"pwd\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                value={pwd}\n                                onChange={e => setPwd(e.target.value)}\n                                name=\"pwd\"\n                            />\n                        </Form.Group>\n\n                        <Button\n                            style={{ marginTop: '20px', width: '100%' }}\n                            bsPrefix=\"btn-flat\"\n                            variant=\"primary\"\n                            type=\"submit\"\n                        >\n                            Login\n                        </Button>\n                    </Form>\n\n                    <hr />\n\n                    <Button\n                        bsPrefix=\"btn-flat\"\n                        variant=\"primary\"\n                        style={{ marginTop: '20px', width: '100%' }}\n                        onClick={() => { }}\n                    >\n                        Cancel\n                    </Button>\n\n                    <hr />\n\n\n                    <p align=\"center\">\n                        <small>\n                            If you have not yet registered you can do so by clicking on the\n                            following link:{' '}\n                            <Link to=\"/signup/n\" onClick={() => { }}>\n                                {' '}\n                                I'm not registered yet.{' '}\n                            </Link>\n                        </small>\n                    </p>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n","import { Container, Form, Button, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../services/auth.service';\nimport { useState } from 'react';\n\n\nexport default function Signup(props) {\n\n    const [email, setEmail] = useState('');\n    const [pwd, setPwd] = useState('');\n\n    const authService = new AuthService();\n\n    const handleFormSubmit = e => {\n        e.preventDefault();\n\n\n        authService\n            .signup(email, pwd)\n            .then(loggedUser => {\n                console.log(loggedUser)\n\n                // storeUser(loggedUser.data);\n                // showAlert(\n                //     `Welcome ${loggedUser.data.name\n                //     }! loading... ${loggedUser.data.role.toUpperCase()} config`\n                // );\n                // setLoginModal(false);\n                // history.push('/');\n            })\n            .catch(err => {\n                // showAlert('Something went wrong! Retry to logg in')\n                // setwrongUser(true);\n                console.log(err);\n            });\n    };\n\n    return (\n        <Container>\n            <h1>SIGNUP</h1>\n            <Row>\n                <Col md={{ span: 10, offset: 1 }} className={'pb-4'}>\n                    <Form onSubmit={handleFormSubmit}>\n                        <Form.Group controlId=\"email\">\n                            <Form.Label>E-mail</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                value={email}\n                                onChange={e => setEmail(e.target.value)}\n                                name=\"email\"\n                            />\n\n                        </Form.Group>\n\n                        <Form.Group controlId=\"pwd\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                value={pwd}\n                                onChange={e => setPwd(e.target.value)}\n                                name=\"pwd\"\n                            />\n                        </Form.Group>\n\n                        <Button\n                            style={{ marginTop: '20px', width: '100%' }}\n                            bsPrefix=\"btn-flat\"\n                            variant=\"primary\"\n                            type=\"submit\"\n                        >\n                            Login\n                        </Button>\n                    </Form>\n\n                    <hr />\n\n                    <Button\n                        bsPrefix=\"btn-flat\"\n                        variant=\"primary\"\n                        style={{ marginTop: '20px', width: '100%' }}\n                        onClick={() => { }}\n                    >\n                        Cancel\n                    </Button>\n\n                    <hr />\n\n\n                    <p align=\"center\">\n                        <small>\n                            If you have not yet registered you can do so by clicking on the\n                            following link:{' '}\n                            <Link to=\"/signup/n\" onClick={() => { }}>\n                                {' '}\n                                I'm not registered yet.{' '}\n                            </Link>\n                        </small>\n                    </p>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n","import AuthService from '../services/auth.service';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'\n\n\nconst Profile = () => {\n\n    const [user, setUser] = useState()\n\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: \"https://prueba-deploy-back.herokuapp.com/sv/auth/logged-user\",\n            withCredentials: true\n        })\n            .then(response => setUser(response.data))\n            .catch(err => console.log(err))\n    }, [])\n\n\n    return (\n        <h1>my name is {user?.username}</h1>\n    );\n};\n\n\nexport default Profile","import './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Profile from './components/Profile';\n\n\n\n\nfunction App() {\n  return (\n    <>\n    <div>\n      <a href=\"/login\">login</a>\n      <a href=\"/signup\">signup</a>\n      <a href=\"/profile\">profile</a>\n    </div>\n      <Switch>\n        <Route path=\"/login\" render={props => (<Login {...props} />)} />\n        <Route path=\"/signup\" render={props => (<Signup {...props} />)} />\n        <Route path=\"/profile\" render={props => (<Profile {...props} />)} />\n\n      </Switch>\n\n\n      {/* <Alert\n        show={toast.show}\n        text={toast.text}\n        closeAlert={() => setToast({ ...toast, show: false })}\n      /> */}\n\n      {/* <Footer loggedUser={this.state.loggedUser} /> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}